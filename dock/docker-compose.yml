version: '3'

services:
  web:
    build: ./web
    container_name: webserver
    restart: always
    links:
      - dbmysql            
      - dbmongo
      - dbinflux        
    ports:
      - "80:80"
    volumes:
      - ./public_html/:/var/www/html/
      - ./web/000-default.conf:/etc/apache2/sites-available/000-default.conf
    networks:
      - frontend
      - backend

  webpython:
    build: ./webpython
    container_name: webpythonserver
    command: python manage.py runserver 0.0.0.0:8000
    restart: always
    links:
      - dbmongo            
    ports:
      - "8000:8000"
    volumes:
      - ./webpython/code/:/code/        
    networks:
      - frontend
      - backend        
   
  dbmysql:
    image: percona/percona-server:5.7
    container_name: perconaserver
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: cisco123
      MYSQL_DATABASE: butterflyv5
    ports:
      - "3306"
    volumes:
      - sql:/var/lib/mysql
      - ./mysql/mysqld.cnf:/etc/percona-server.conf.d/mysqld.cnf
    networks:
      - backend

  dbmongo:
    image: mongo:4.1
    container_name: mongoserver
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root 
      MONGO_INITDB_ROOT_PASSWORD: cisco123
      MONGO_INITDB_DATABASE: butterflyv5_discovery
    ports:
      - "27017:27017"
    networks:
      - backend

  mongo-express:
    image: mongo-express
    container_name: expressserver
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: dbmongo            
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: cisco123 
    networks:
      - frontend            
      - backend      

  dbinflux:
    image: influxdb:1.7
    container_name: influxserver
    restart: always
    ports:
      - "8086:8086"
    networks:
      - backend

volumes:
  sql:        
  nosql:

networks:
  frontend:
    driver: bridge         
  backend:        


